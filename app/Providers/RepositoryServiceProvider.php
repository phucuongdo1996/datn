<?php

namespace App\Providers;

use Illuminate\Support\Facades\Auth;
use Illuminate\Support\ServiceProvider;

class RepositoryServiceProvider extends ServiceProvider
{
    /**
     * Register services.
     *
     * @return void
     */
    public function register()
    {
        $this->app->singleton(
            \App\Repositories\User\UserRepositoryInterface::class,
            \App\Repositories\User\UserEloquentRepository::class
        );
        $this->app->singleton(
            \App\Repositories\VerifiedRegister\VerifiedRegisterRepositoryInterface::class,
            \App\Repositories\VerifiedRegister\VerifiedRegisterEloquentRepository::class
        );
        $this->app->singleton(
            \App\Repositories\Profile\ProfileRepositoryInterface::class,
            \App\Repositories\Profile\ProfileEloquentRepository::class
        );
        $this->app->singleton(
            \App\Repositories\Specialty\SpecialtyRepositoryInterface::class,
            \App\Repositories\Specialty\SpecialtyEloquentRepository::class
        );
        $this->app->singleton(
            \App\Repositories\ProfileSpecialty\ProfileSpecialtyRepositoryInterface::class,
            \App\Repositories\ProfileSpecialty\ProfileSpecialtyEloquentRepository::class
        );
        $this->app->singleton(
            \App\Repositories\Property\PropertyRepositoryInterface::class,
            \App\Repositories\Property\PropertyEloquentRepository::class
        );
        $this->app->singleton(
            \App\Repositories\RealEstateType\RealEstateTypeRepositoryInterface::class,
            \App\Repositories\RealEstateType\RealEstateTypeEloquentRepository::class
        );
        $this->app->singleton(
            \App\Repositories\DetailRealEstateType\DetailRealEstateTypeRepositoryInterface::class,
            \App\Repositories\DetailRealEstateType\DetailRealEstateTypeEloquentRepository::class
        );
        $this->app->singleton(
            \App\Repositories\BuildingRight\BuildingRightRepositoryInterface::class,
            \App\Repositories\BuildingRight\BuildingRightEloquentRepository::class
        );
        $this->app->singleton(
            \App\Repositories\LandRight\LandRightRepositoryInterface::class,
            \App\Repositories\LandRight\LandRightEloquentRepository::class
        );
        $this->app->singleton(
            \App\Repositories\HouseMaterial\HouseMaterialRepositoryInterface::class,
            \App\Repositories\HouseMaterial\HouseMaterialEloquentRepository::class
        );
        $this->app->singleton(
            \App\Repositories\HouseRoofType\HouseRoofTypeRepositoryInterface::class,
            \App\Repositories\HouseRoofType\HouseRoofTypeEloquentRepository::class
        );
        $this->app->singleton(
            \App\Repositories\TypeRental\TypeRentalRepositoryInterface::class,
            \App\Repositories\TypeRental\TypeRentalEloquentRepository::class
        );
        $this->app->singleton(
            \App\Repositories\ResetPassword\ResetPasswordRepositoryInterface::class,
            \App\Repositories\ResetPassword\ResetPasswordEloquentRepository::class
        );
        $this->app->singleton(
            \App\Repositories\Simulation\SimulationRepositoryInterface::class,
            \App\Repositories\Simulation\SimulationEloquentRepository::class
        );
        $this->app->singleton(
            \App\Repositories\GeneralInfoProperty\GeneralInfoPropertyRepositoryInterface::class,
            \App\Repositories\GeneralInfoProperty\GeneralInfoPropertyEloquentRepository::class
        );
        $this->app->singleton(
            \App\Repositories\GeneralImagesProperty\GeneralImagesPropertyRepositoryInterface::class,
            \App\Repositories\GeneralImagesProperty\GeneralImagesPropertyEloquentRepository::class
        );
        $this->app->singleton(
            \App\Repositories\PortfolioAnalysis\PortfolioAnalysisRepositoryInterface::class,
            \App\Repositories\PortfolioAnalysis\PortfolioAnalysisRepositoryEloquentRepository::class
        );
        $this->app->singleton(
            \App\Repositories\Areas\AreaRepositoryInterface::class,
            \App\Repositories\Areas\AreaEloquentRepository::class
        );
        $this->app->singleton(
            \App\Repositories\IndexFormulas\IndexFormulasRepositoryInterface::class,
            \App\Repositories\IndexFormulas\IndexFormulasEloquentRepository::class
        );
        $this->app->singleton(
            \App\Repositories\RepairHistory\RepairHistoryRepositoryInterface::class,
            \App\Repositories\RepairHistory\RepairHistoryEloquentRepository::class
        );
        $this->app->singleton(
            \App\Repositories\BusinessPlan\BusinessPlanRepositoryInterface::class,
            \App\Repositories\BusinessPlan\BusinessPlanEloquentRepository::class
        );
        $this->app->singleton(
            \App\Repositories\SimpleAssessment\SimpleAssessmentRepositoryInterface::class,
            \App\Repositories\SimpleAssessment\SimpleAssessmentEloquentRepository::class
        );
        $this->app->singleton(
            \App\Repositories\RentRoll\RentRollRepositoryInterface::class,
            \App\Repositories\RentRoll\RentRollEloquentRepository::class
        );
        $this->app->singleton(
            \App\Repositories\Tax\TaxRepositoryInterface::class,
            \App\Repositories\Tax\TaxEloquentRepository::class
        );
        $this->app->singleton(
            \App\Repositories\MonthlyBalance\MonthlyBalanceRepositoryInterface::class,
            \App\Repositories\MonthlyBalance\MonthlyBalanceEloquentRepository::class
        );
        $this->app->singleton(
            \App\Repositories\AnnualPerformance\AnnualPerformanceRepositoryInterface::class,
            \App\Repositories\AnnualPerformance\AnnualPerformanceEloquentRepository::class
        );
        $this->app->singleton(
            \App\Repositories\TaxProperty\TaxPropertyRepositoryInterface::class,
            \App\Repositories\TaxProperty\TaxPropertyEloquentRepository::class
        );
        $this->app->singleton(
            \App\Repositories\Topic\TopicRepositoryInterface::class,
            \App\Repositories\Topic\TopicEloquentRepository::class
        );
        $this->app->singleton(
            \App\Repositories\Category\CategoryRepositoryInterface::class,
            \App\Repositories\Category\CategoryEloquentRepository::class
        );
        $this->app->singleton(
            \App\Repositories\ArticlePhoto\ArticlePhotoRepositoryInterface::class,
            \App\Repositories\ArticlePhoto\ArticlePhotoEloquentRepository::class
        );
        $this->app->singleton(
            \App\Repositories\AccuracyEmailChange\AccuracyEmailChangeRepositoryInterface::class,
            \App\Repositories\AccuracyEmailChange\AccuracyEmailChangeEloquentRepository::class
        );
        $this->app->singleton(
            \App\Repositories\Payment\PaymentRepositoryInterface::class,
            \App\Repositories\Payment\PaymentEloquentRepository::class
        );
        $this->app->singleton(
            \App\Repositories\UserSubscription\UserSubscriptionRepositoryInterface::class,
            \App\Repositories\UserSubscription\UserSubscriptionEloquentRepository::class
        );
        $this->app->singleton(
            \App\Api\Pay\PayApiInterface::class,
            \App\Api\Pay\PayApi::class
        );
        $this->app->singleton(
            \App\Repositories\PaymentError\PaymentErrorRepositoryInterface::class,
            \App\Repositories\PaymentError\PaymentErrorEloquentRepository::class
        );
        $this->app->singleton(
            \App\Repositories\SubUserPermission\SubUserPermissionRepositoryInterface::class,
            \App\Repositories\SubUserPermission\SubUserPermissionEloquentRepository::class
        );
        $this->app->singleton(
            \App\Repositories\SubUserProperty\SubUserPropertyRepositoryInterface::class,
            \App\Repositories\SubUserProperty\SubUserPropertyEloquentRepository::class
        );
        $this->app->singleton(
            \App\Repositories\PayDetail\PayDetailRepositoryInterface::class,
            \App\Repositories\PayDetail\PayDetailEloquentRepository::class
        );
        $this->app->singleton(
            \App\Repositories\Information\InformationRepositoryInterface::class,
            \App\Repositories\Information\InformationEloquentRepository::class
        );
        $this->app->singleton(
            \App\Repositories\Contact\ContactRepositoryInterface::class,
            \App\Repositories\Contact\ContactEloquentRepository::class
        );
    }

    /**
     * Bootstrap services.
     *
     * @return void
     */
    public function boot()
    {
        view()->composer('*', function ($view) {
            $view->with('currentUser', Auth::check() ? Auth::user() : false);
        });
    }
}
